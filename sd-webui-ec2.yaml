AWSTemplateFormatVersion: "2010-09-09"
Description: A CloudFormation template to deploy stable-diffusion-webui on EC2

Parameters:
  CidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 0.0.0.0/0
    Description: "CIDR block allowed to access the instance (example: 10.0.0.0/16, 3.179.207.170/32)"
    Type: String
  Ec2InstanceType:
    Description: EC2 instance type
    Type: String
    Default: g4dn.xlarge
    AllowedValues:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g5.xlarge
      - g5.2xlarge
      - g5.4xlarge
  Ec2KeyPair:
    Description: EC2 key pair for connecting to the instance using SSH
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AMIRegionMap: # Deep Learning AMI GPU PyTorch 1.13.1 (Ubuntu 20.04) 20230530
    ap-northeast-1:
      ami: ami-0ccc8cde8079fbd80
    ap-northeast-2:
      ami: ami-00122226b77d62386
    ap-northeast-3:
      ami: ami-0b5e04c3248a2bc7d
    ap-south-1:
      ami: ami-0cebcf5b9d60dc50f
    ap-southeast-1:
      ami: ami-07038c7683047a90a
    ap-southeast-2:
      ami: ami-0e60dbcf8a762bd42
    ca-central-1:
      ami: ami-0bb8c0d44f2294c3f
    eu-central-1:
      ami: ami-0c7d7e0e142f2d910
    eu-north-1:
      ami: ami-04475f6596ac5d1f1
    eu-west-1:
      ami: ami-01fdee7e51dee90e8
    eu-west-2:
      ami: ami-067ff71b3acc16362
    eu-west-3:
      ami: ami-076a0183aec528137
    sa-east-1:
      ami: ami-0b7bd63e402b4a99f
    us-east-1:
      ami: ami-0705983c654abda59
    us-east-2:
      ami: ami-0c7e25230b4705f1b
    us-west-1:
      ami: ami-0bb9ce46219e4fa5a
    us-west-2:
      ami: ami-078e2151eadb5c30c

# Conditions:
#   HasKeyPair:
#     !Not [ !Equals [ !Ref Ec2KeyPair, '' ] ]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for StableDiffusion WebUI EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 7860
          ToPort: 7861
          CidrIp: !Ref CidrBlock
      Tags:
        - Key: Name
          Value: sd-webui

  InstallWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  InstallWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: EC2Instance
    Properties:
      Handle: !Ref InstallWaitHandle
      Timeout: 1800
      Count: 1

  SSMIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SSMIAMRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref EC2InstanceProfile
      InstanceType: !Ref Ec2InstanceType
      ImageId: !FindInMap
        - AMIRegionMap
        - !Ref "AWS::Region"
        - ami
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 150
            VolumeType: gp3
      Tags:
        - Key: Name
          Value: sd-webui
      KeyName: !Ref Ec2KeyPair
        # !If [HasKeyPair, !Ref Ec2KeyPair, !Ref "AWS::NoValue"]
      SecurityGroups:
        - Ref: SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x

          export DEBIAN_FRONTEND=noninteractive
          echo 'DPkg::Lock::Timeout=300;' | tee /etc/apt/apt.conf.d/80-dpkg-lock
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt install xterm wget git python3 python3-venv build-essential net-tools libtcmalloc-minimal4 -y

          # set swap space from instance storage
          SWAP_DEV=$(lsblk -o PATH,MODEL | grep 'Instance Storage' | awk '{print $1}')
          mkswap ${!SWAP_DEV}
          swapon ${!SWAP_DEV}
          echo "${!SWAP_DEV}       none    swap    sw  0       0" >> /etc/fstab
          swapon -s
          sysctl -w vm.swappiness=10
          echo 'vm.swappiness = 10' >> /etc/sysctl.conf

          # install git-lfs
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          sudo -u ubuntu git lfs install --skip-smudge

          # install python 3.10
          add-apt-repository ppa:deadsnakes/ppa -y
          apt-get install python3.10 python3.10-venv python3.10-dev -y
          # update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
          # update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 2
          [ $? -eq 0 ] || curl -X PUT -H 'Content-Type:' --data-binary '{"Status" : "FAILURE", "Reason" : "python3.10 install failed", "UniqueId" : "EC2Instance", "Data" : "python3.10 install failed"}' "${InstallWaitHandle}"

          # clone stable-diffusion-webui
          cd /home/ubuntu
          git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git
          echo 'python_cmd="python3.10"' >> stable-diffusion-webui/webui-user.sh
          echo 'export COMMANDLINE_ARGS="--xformers --enable-insecure-extension-access --theme dark --no-half-vae"' >> stable-diffusion-webui/webui-user.sh

          # install extensions
          cd /home/ubuntu/stable-diffusion-webui/extensions
          git clone https://github.com/butaixianran/Stable-Diffusion-Webui-Civitai-Helper
          git clone https://github.com/kohya-ss/sd-webui-additional-networks
          git clone https://github.com/zanllp/sd-webui-infinite-image-browsing
          git clone https://github.com/s0md3v/sd-webui-roop
          git clone https://github.com/Mikubill/sd-webui-controlnet
          # selected models only
          wget --content-disposition --progress=dot:giga 'https://huggingface.co/lllyasviel/ControlNet-v1-1/resolve/main/control_v11p_sd15_canny.pth'
          wget --content-disposition --progress=dot:giga 'https://huggingface.co/lllyasviel/ControlNet-v1-1/resolve/main/control_v11p_sd15_openpose.pth'
          git clone https://github.com/fkunn1326/openpose-editor

          # symlink lora folder for backward compatibility (just in case)
          cd /home/ubuntu
          cd stable-diffusion-webui/models
          ln -sf ../extensions/sd-webui-additional-networks/models/lora ./Lora

          # download sd models
          cd /home/ubuntu/stable-diffusion-webui/models/Stable-diffusion
          wget --content-disposition --progress=dot:giga 'https://civitai.com/api/download/models/11745?type=VAE&format=Other'

          # download Lora
          cd /home/ubuntu/stable-diffusion-webui/models/Lora
          wget --content-disposition --progress=dot:giga 'https://civitai.com/api/download/models/34562?type=Model&format=SafeTensor&size=full&fp=fp16'
          wget --content-disposition --progress=dot:giga 'https://civitai.com/api/download/models/31284?type=Model&format=SafeTensor&size=full&fp=fp16'
          wget --content-disposition --progress=dot:giga 'https://civitai.com/api/download/models/52974?type=Model&format=SafeTensor'

          # install textual inversion
          cd /home/ubuntu/stable-diffusion-webui/embeddings
          wget --content-disposition  --progress=dot:giga 'https://huggingface.co/datasets/gsdf/EasyNegative/resolve/main/EasyNegative.safetensors'
          #wget --content-disposition  --progress=dot:giga 'https://civitai.com/api/download/models/9208?type=Model&format=SafeTensor&size=full&fp=fp16'
          wget --content-disposition  --progress=dot:giga 'https://huggingface.co/datasets/Nerfgun3/bad_prompt/resolve/main/bad_prompt.pt'
          wget --content-disposition  --progress=dot:giga 'https://huggingface.co/datasets/Nerfgun3/bad_prompt/resolve/main/bad_prompt_version2.pt'
          wget --content-disposition --progress=dot:giga 'https://civitai.com/api/download/models/60938?type=Negative&format=Other'
          wget --content-disposition --progress=dot:giga 'https://huggingface.co/yesyeahvh/bad-hands-5/resolve/main/bad-hands-5.pt'

          # create service to start at boot
          cat << EOF > /etc/systemd/system/sd-webui.service
          [Unit]
          Description=Stable Diffusion WebUI
          After=network.target

          [Service]
          ExecStart=/home/ubuntu/start-sd-webui.sh
          User=ubuntu
          Group=ubuntu
          Restart=Always
          RestartSec=30s

          [Install]
          WantedBy=default.target
          EOF
          chmod 644 /etc/systemd/system/sd-webui.service

          cat << EOF > /home/ubuntu/start-sd-webui.sh
          #!/bin/sh
          cd /home/ubuntu/stable-diffusion-webui
          ./webui.sh --listen
          EOF
          chmod 755 /home/ubuntu/start-sd-webui.sh

          chown -R ubuntu:ubuntu /home/ubuntu/
          systemctl enable sd-webui.service
          systemctl start sd-webui.service

          curl -X PUT -H 'Content-Type:' --data-binary '{"Status" : "SUCCESS","Reason" : "Configuration Complete","UniqueId" : "EC2Instance","Data" : "Application has completed configuration."}' "${InstallWaitHandle}"

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: sd-webui

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: !Ref EC2Instance

Outputs:
  WebUiURL:
    Description: URL for Stable Diffusion Web UI (available in 30 mins)
    Value: !Sub "http://${EIP}:7860"
